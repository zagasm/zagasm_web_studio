name: üöÄ Zagasm Studios Frontend Deployment

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üü¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üéØ Set environment for build
        id: build-env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "VITE_API_BASE_URL=https://api.studios.zagasm.com" >> $GITHUB_ENV
            echo "env_name=production" >> $GITHUB_OUTPUT
          else
            echo "VITE_API_BASE_URL=https://test-api.studios.zagasm.com" >> $GITHUB_ENV
            echo "env_name=staging" >> $GITHUB_OUTPUT
          fi

      - name: üèóÔ∏è Build application
        run: |
          echo "Building with API URL: $VITE_API_BASE_URL"
          npm run build

      - name: üìä Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ github.run_number }}
          path: dist/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üîß Install tools
        run: sudo apt-get update && sudo apt-get install -y sshpass rsync

      - name: üéØ Determine target
        id: target
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "app_dir=/var/www/studios" >> $GITHUB_OUTPUT
            echo "env_type=production" >> $GITHUB_OUTPUT
            echo "üéØ Deploying to PRODUCTION: /var/www/studios"
          else
            echo "app_dir=/var/www/staging_studios" >> $GITHUB_OUTPUT
            echo "env_type=staging" >> $GITHUB_OUTPUT
            echo "üß™ Deploying to STAGING: /var/www/staging_studios"
          fi

      - name: üì• Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build-${{ github.run_number }}
          path: dist/

      - name: üîÑ Sync built files to server
        env:
          STUDIOS_VPS_PASSWORD: ${{ secrets.STUDIOS_VPS_PASSWORD }}
          STUDIOS_VPS_IP: ${{ secrets.STUDIOS_VPS_IP }}
        run: |
          APP_DIR="${{ steps.target.outputs.app_dir }}"
          ENV_TYPE="${{ steps.target.outputs.env_type }}"

          echo "üì§ Syncing $ENV_TYPE frontend to server..."

          # Sync ONLY the dist folder contents to server
          sshpass -p "$STUDIOS_VPS_PASSWORD" rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" \
            dist/ root@$STUDIOS_VPS_IP:$APP_DIR/

          echo "‚úÖ Frontend sync completed"

      - name: üîê Set proper permissions and restart web server
        env:
          STUDIOS_VPS_PASSWORD: ${{ secrets.STUDIOS_VPS_PASSWORD }}
          STUDIOS_VPS_IP: ${{ secrets.STUDIOS_VPS_IP }}
        run: |
          APP_DIR="${{ steps.target.outputs.app_dir }}"
          ENV_TYPE="${{ steps.target.outputs.env_type }}"

          echo "üîê Setting permissions and restarting services on $ENV_TYPE..."

          sshpass -p "$STUDIOS_VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$STUDIOS_VPS_IP "
            set -e
            cd $APP_DIR

            echo 'üîê Setting file permissions...'
            chown -R www-data:www-data .
            find . -type d -exec chmod 755 {} +
            find . -type f -exec chmod 644 {} +

            echo 'üîÑ Restarting web server...'
            # Try different web server restart commands
            systemctl restart nginx || systemctl restart apache2 || systemctl restart httpd || echo '‚ö†Ô∏è No web server found to restart'

            echo '‚úÖ $ENV_TYPE frontend deployment completed successfully!'
          "

      - name: üè• Health Check
        env:
          STUDIOS_VPS_PASSWORD: ${{ secrets.STUDIOS_VPS_PASSWORD }}
          STUDIOS_VPS_IP: ${{ secrets.STUDIOS_VPS_IP }}
        run: |
          APP_DIR="${{ steps.target.outputs.app_dir }}"
          ENV_TYPE="${{ steps.target.outputs.env_type }}"

          echo "üè• Running health check on $ENV_TYPE..."

          sshpass -p "$STUDIOS_VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$STUDIOS_VPS_IP "
            cd $APP_DIR

            echo 'üîç Checking frontend deployment...'
            if [ -f index.html ]; then
              echo '‚úÖ index.html exists'
              if [ -d assets ]; then
                echo '‚úÖ Assets directory exists'
              else
                echo '‚ö†Ô∏è Assets directory missing'
              fi
            else
              echo '‚ùå index.html not found'
            fi

            echo 'üè• Health check completed'
          "

      - name: üìä Deployment Summary
        run: |
          echo "üéâ **Frontend Deployment Summary**"
          echo "- **Repository:** Zagasm Studios Frontend"
          echo "- **Branch:** ${{ github.ref_name }}"
          echo "- **Environment:** ${{ github.ref == 'refs/heads/main' && 'Production (/var/www/studios)' || 'Staging (/var/www/staging_studios)' }}"
          echo "- **Server:** ${{ secrets.STUDIOS_VPS_IP }}"
          echo "- **Commit:** ${{ github.sha }}"
          echo "- **Triggered by:** ${{ github.actor }}"
          echo "- **Run Number:** ${{ github.run_number }}"
          echo ""
          echo "‚úÖ **Frontend deployment completed successfully!**"
